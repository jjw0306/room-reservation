spring.datasource.hikari.maximum-pool-size=4

spring.datasource.url=jdbc:postgresql://localhost:5432/radius
spring.datasource.username=radius
spring.datasource.password=radius

spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=true

spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

#server.port=8787

#spring.jackson.deserialization.fail-on-unknown-properties=false

spring.jpa.hibernate.ddl-auto=create-drop

#email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=[gmail 계정]
spring.mail.password=[gmail 비밀번호]
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#lazy_loading을 사용하겠다. 
#lazy_loading이란 하나의 객체를 참고했을때 그 이후에 연관된 객체 그래프를 탐색할 수 있냐 없냐를 말한다. 객체그래프를 탐색할 수 있으면 lazy_loading이 가능한 것.
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
